<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.lohika.jclub.base</groupId>
  <artifactId>spring-cloud-base-service</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Spring base service</name>
  <description>Spring base service</description>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.4.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
    <spring-cloud.version>Dalston.RELEASE</spring-cloud.version>
    <docker.baseDir>${basedir}/src/main/docker</docker.baseDir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>1.4.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
        </plugin>

        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <configuration>
            <target>
              <copy file="${project.build.directory}/${project.build.finalName}.jar"
                    tofile="${project.build.directory}/${project.artifactId}.jar"/>
            </target>
          </configuration>
          <executions>
            <execution>
              <phase>install</phase>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.19.1</version>
          <executions>
            <execution>
              <id>default-test</id>
              <configuration>
                <includes>
                  <include>**/*Test.java</include>
                </includes>
                <excludes>
                  <exclude>**/*IntegrationTest.java</exclude>
                </excludes>
                <systemPropertyVariables>
                  <spring.profiles.active>test</spring.profiles.active>
                </systemPropertyVariables>
                <argLine>-Duser.language=en -Duser.region=US -Djava.security.egd=file:/dev/./urandom</argLine>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <configuration combine.self="override">
            <!-- https://github.com/spring-projects/spring-boot/issues/6254 -->
            <additionalClasspathElements>
              <additionalClasspathElement>${basedir}/target/classes</additionalClasspathElement>
            </additionalClasspathElements>
            <parallel>none</parallel>
          </configuration>
          <executions>
            <execution>
              <id>default</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <configuration>
                <includes>
                  <include>**/*IntegrationTest.java</include>
                </includes>
                <excludes>
                  <exclude>**/Base*.java</exclude>
                </excludes>
                <systemPropertyVariables>
                  <spring.profiles.active>test</spring.profiles.active>
                </systemPropertyVariables>
                <argLine>-Duser.language=en -Duser.region=US -Djava.security.egd=file:/dev/./urandom</argLine>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>1.0.0</version>
          <dependencies>
            <dependency>
              <groupId>com.lohika.jclub.base</groupId>
              <artifactId>spring-cloud-base-docker-image</artifactId>
              <version>0.0.1-SNAPSHOT</version>
              <type>pom</type>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>build-image</id>
              <phase>install</phase>
              <goals>
                <goal>build</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <imageName>${project.artifactId}</imageName>
            <dockerDirectory>${docker.baseDir}</dockerDirectory>
            <resources>
              <resource>
                <targetPath>/</targetPath>
                <directory>${project.build.directory}</directory>
                <include>${project.artifactId}.jar</include>
              </resource>
            </resources>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
